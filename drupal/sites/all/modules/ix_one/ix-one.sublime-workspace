{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"IX",
				"IX-One"
			],
			[
				"curl_err",
				"curl_error"
			],
			[
				"http",
				"http_request_time"
			],
			[
				"http_request",
				"http_request_time"
			],
			[
				"curl_",
				"curl_errno"
			],
			[
				"curl",
				"curl_setopt"
			],
			[
				"json",
				"json_result"
			],
			[
				"data",
				"datafilters"
			]
		]
	},
	"buffers":
	[
		{
			"file": "ix_one.info",
			"settings":
			{
				"buffer_size": 57,
				"line_ending": "Unix"
			}
		},
		{
			"file": "api.inc",
			"settings":
			{
				"buffer_size": 53554,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/emorgan/Documents/Workspace/ix-one/hva_items_found.csv",
			"settings":
			{
				"buffer_size": 254453,
				"line_ending": "CR"
			}
		},
		{
			"file": "/Users/emorgan/Documents/Workspace/ix-one/hva_items.txt",
			"settings":
			{
				"buffer_size": 366782,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/emorgan/Documents/Workspace/ix-one/token",
			"settings":
			{
				"buffer_size": 1910,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/emorgan/Documents/Workspace/ix-one/token.php",
			"settings":
			{
				"buffer_size": 1918,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ix_one.module",
			"settings":
			{
				"buffer_size": 2554,
				"line_ending": "Unix"
			}
		},
		{
			"file": "ix_one_form.inc",
			"settings":
			{
				"buffer_size": 12757,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/emorgan/Documents/Workspace/app/drupal/modules/block/block.api.php",
			"settings":
			{
				"buffer_size": 14763,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/emorgan/Documents/Workspace/app/drupal/includes/theme.inc",
			"settings":
			{
				"buffer_size": 113566,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/emorgan/Documents/Workspace/app/drupal/sites/all/modules/examples/form_example/form_example.module",
			"settings":
			{
				"buffer_size": 8150,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<?php\n\n/**\n * @file\n * An example of how to use the new #states Form API element, allowing\n * dynamic form behavior with very simple setup.\n */\n\n/**\n * States demo form.\n *\n * This form shows off the #states system by dynamically showing parts of the\n * form based on the state of other parts.\n *\n * @ingroup form_example\n *\n * The basic idea is that you add a #states property to the element which is\n * to be changed based on some action elsewhere on the form. The #states\n * property lists a change which is to be made, and under what conditions\n * that change should be made.\n *\n * For example, in the 'tests_taken' form element below we have:\n * @code\n * '#states' => array(\n *   'visible' => array(\n *     ':input[name=\"student_type\"]' => array('value' => 'high_school'),\n *   ),\n * ),\n * @endcode\n * Meaning that the element is to be made visible when the condition is met.\n * The condition is a combination of a jQuery selector (which selects the\n * element we want to test) and a condition for that element. In this case,\n * the condition is whether the return value of the 'student_type' element is\n * 'high_school'. If it is, this element will be visible.\n *\n * So the syntax is:\n * @code\n * '#states' => array(\n *   'action_to_take_on_this_form_element' => array(\n *     'jquery_selector_for_another_element' => array(\n *       'condition_type' => value,\n *     ),\n *   ),\n * ),\n * @endcode\n *\n * If you need an action to take place only when two different conditions are\n * true, then you add both of those conditions to the action. See the\n * 'country_writein' element below for an example.\n *\n * Note that the easiest way to select a textfield, checkbox, or select is with\n * the\n * @link http://api.jquery.com/input-selector/ ':input' jquery shortcut @endlink,\n * which selects any any of those.\n *\n * There are examples below of changing or hiding an element when a checkbox\n * is checked, when a textarea is filled, when a select has a given value.\n *\n * See drupal_process_states() for full documentation.\n *\n * @see forms_api_reference.html\n */\nfunction form_example_states_form($form, &$form_state) {\n  $form['student_type'] = array(\n    '#type' => 'radios',\n    '#options' => array(\n      'high_school'   => t('High School'),\n      'undergraduate' => t('Undergraduate'),\n      'graduate'      => t('Graduate'),\n    ),\n    '#title' => t('What type of student are you?'),\n  );\n  $form['high_school'] = array(\n    '#type' => 'fieldset',\n    '#title' => t('High School Information'),\n    // This #states rule says that the \"high school\" fieldset should only\n    // be shown if the \"student_type\" form element is set to \"High School\".\n    '#states' => array(\n      'visible' => array(\n        ':input[name=\"student_type\"]' => array('value' => 'high_school'),\n      ),\n    ),\n  );\n\n  // High school information.\n  $form['high_school']['tests_taken'] = array(\n    '#type' => 'checkboxes',\n    '#options' => drupal_map_assoc(array(t('SAT'), t('ACT'))),\n    '#title' => t('What standardized tests did you take?'),\n    // This #states rule says that this checkboxes array will be visible only\n    // when $form['student_type'] is set to t('High School').\n    // It uses the jQuery selector :input[name=student_type] to choose the\n    // element which triggers the behavior, and then defines the \"High School\"\n    // value as the one that triggers visibility.\n    '#states' => array(\n      // Action to take.\n      'visible' => array(\n        ':input[name=\"student_type\"]' => array('value' => 'high_school'),\n      ),\n    ),\n  );\n\n  $form['high_school']['sat_score'] = array(\n    '#type' => 'textfield',\n    '#title' => t('Your SAT score:'),\n    '#size' => 4,\n\n    // This #states rule limits visibility to when the $form['tests_taken']\n    // 'SAT' checkbox is checked.\"\n    '#states' => array(\n      // Action to take.\n      'visible' => array(\n        ':input[name=\"tests_taken[SAT]\"]' => array('checked' => TRUE),\n      ),\n    ),\n  );\n  $form['high_school']['act_score'] = array(\n    '#type' => 'textfield',\n    '#title' => t('Your ACT score:'),\n    '#size' => 4,\n\n    // Set this element visible if the ACT checkbox above is checked.\n    '#states' => array(\n      // Action to take.\n      'visible' => array(\n        ':input[name=\"tests_taken[ACT]\"]' => array('checked' => TRUE),\n      ),\n    ),\n  );\n\n  // Undergrad information.\n  $form['undergraduate'] = array(\n    '#type' => 'fieldset',\n    '#title' => t('Undergraduate Information'),\n    // This #states rule says that the \"undergraduate\" fieldset should only\n    // be shown if the \"student_type\" form element is set to \"Undergraduate\".\n    '#states' => array(\n      'visible' => array(\n        ':input[name=\"student_type\"]' => array('value' => 'undergraduate'),\n      ),\n    ),\n  );\n\n  $form['undergraduate']['how_many_years'] = array(\n    '#type' => 'select',\n    '#title' => t('How many years have you completed?'),\n    // The options here are integers, but since all the action here happens\n    // using the DOM on the client, we will have to use strings to work with\n    // them.\n    '#options' => array(\n      1 => t('One'),\n      2 => t('Two'),\n      3 => t('Three'),\n      4 => t('Four'),\n      5 => t('Lots'),\n    ),\n  );\n\n  $form['undergraduate']['comment'] = array(\n    '#type' => 'item',\n    '#description' => t(\"Wow, that's a long time.\"),\n    '#states' => array(\n      'visible' => array(\n        // Note that '5' must be used here instead of the integer 5.\n        // The information is coming from the DOM as a string.\n        ':input[name=\"how_many_years\"]' => array('value' => '5'),\n      ),\n    ),\n  );\n  $form['undergraduate']['school_name'] = array(\n    '#type' => 'textfield',\n    '#title' => t('Your college or university:'),\n  );\n  $form['undergraduate']['school_country'] = array(\n    '#type' => 'select',\n    '#options' => drupal_map_assoc(array(t('UK'), t('Other'))),\n    '#title' => t('In what country is your college or university located?'),\n  );\n  $form['undergraduate']['country_writein'] = array(\n    '#type' => 'textfield',\n    '#size' => 20,\n    '#title' => t('Please enter the name of the country where your college or university is located.'),\n\n    // Only show this field if school_country is set to 'Other'.\n    '#states' => array(\n      // Action to take: Make visible.\n      'visible' => array(\n        ':input[name=\"school_country\"]' => array('value' => t('Other')),\n      ),\n    ),\n  );\n\n  $form['undergraduate']['thanks'] = array(\n    '#type' => 'item',\n    '#description' => t('Thanks for providing both your school and your country.'),\n    '#states' => array(\n      // Here visibility requires that two separate conditions be true.\n      'visible' => array(\n        ':input[name=\"school_country\"]' => array('value' => t('Other')),\n        ':input[name=\"country_writein\"]' => array('filled' => TRUE),\n      ),\n    ),\n  );\n  \n  $form['undergraduate']['go_away'] = array(\n    '#type' => 'submit',\n    '#value' => t('Done with form'),\n    '#states' => array(\n      // Here visibility requires that two separate conditions be true.\n      'visible' => array(\n        ':input[name=\"school_country\"]' => array('value' => t('Other')),\n        ':input[name=\"country_writein\"]' => array('filled' => TRUE),\n      ),\n    ),\n  );\n\n  // Graduate student information.\n  $form['graduate'] = array(\n    '#type' => 'fieldset',\n    '#title' => t('Graduate School Information'),\n    // This #states rule says that the \"graduate\" fieldset should only\n    // be shown if the \"student_type\" form element is set to \"Graduate\".\n    '#states' => array(\n      'visible' => array(\n        ':input[name=\"student_type\"]' => array('value' => 'graduate'),\n      ),\n    ),\n  );\n  $form['graduate']['more_info'] = array(\n    '#type' => 'textarea',\n    '#title' => t('Please describe your graduate studies'),\n  );\n\n  $form['graduate']['info_provide'] = array(\n    '#type' => 'checkbox',\n    '#title' => t('Check here if you have provided information above'),\n    '#disabled' => TRUE,\n    '#states' => array(\n      // Mark this checkbox checked if the \"more_info\" textarea has something\n      // in it, if it's 'filled'.\n      'checked' => array(\n        ':input[name=\"more_info\"]' => array('filled' => TRUE),\n      ),\n    ),\n  );\n\n  $form['average'] = array(\n    '#type' => 'textfield',\n    '#title' => t('Enter your average'),\n    // To trigger a state when the same controlling element can have more than\n    // one possible value, put all values in a higher-level array.\n    '#states' => array(\n      'visible' => array(\n        ':input[name=\"student_type\"]' => array(\n          array('value' => 'high_school'),\n          array('value' => 'undergraduate'),\n        ),\n      ),\n    ),\n  );\n\n  $form['expand_more_info'] = array(\n    '#type' => 'checkbox',\n    '#title' => t('Check here if you want to add more information.'),\n  );\n  $form['more_info'] = array(\n    '#type' => 'fieldset',\n    '#title' => t('Additional Information'),\n    '#collapsible' => TRUE,\n    '#collapsed' => TRUE,\n\n    // Expand the expand_more_info fieldset if the box is checked.\n    '#states' => array(\n      'expanded' => array(\n        ':input[name=\"expand_more_info\"]' => array('checked' => TRUE),\n      ),\n    ),\n  );\n  $form['more_info']['feedback'] = array(\n    '#type' => 'textarea',\n    '#title' => t('What do you have to say?'),\n  );\n\n  $form['submit'] = array(\n    '#type' => 'submit',\n    '#value' => t('Submit your information'),\n  );\n\n  return $form;\n}\n\n/**\n * Submit handler for form_example_states_form().\n */\nfunction form_example_states_form_submit($form, &$form_state) {\n  drupal_set_message(t('Submitting values: @values', array('@values' => var_export($form_state['values'], TRUE))));\n}\n",
			"file": "/Users/emorgan/Documents/Workspace/app/drupal/sites/all/modules/examples/form_example/form_example_states.inc",
			"file_size": 9663,
			"file_write_time": 1430921390000000,
			"settings":
			{
				"buffer_size": 9666,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/emorgan/Documents/Workspace/app/drupal/sites/all/modules/examples/form_example/form_example_elements.inc",
			"settings":
			{
				"buffer_size": 19141,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/emorgan/Documents/Workspace/app/drupal/sites/all/modules/examples/form_example/form_example_tutorial.inc",
			"settings":
			{
				"buffer_size": 27885,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/emorgan/Documents/Workspace/app/drupal/sites/all/modules/ix_one/ix_one.module"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"num_names",
			"block_view",
			"turmeric",
			"tumeric",
			"item_list"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 7,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "ix_one.info",
					"settings":
					{
						"buffer_size": 57,
						"regions":
						{
						},
						"selection":
						[
							[
								51,
								51
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "api.inc",
					"settings":
					{
						"buffer_size": 53554,
						"regions":
						{
						},
						"selection":
						[
							[
								47631,
								51345
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/emorgan/Documents/Workspace/ix-one/hva_items_found.csv",
					"settings":
					{
						"buffer_size": 254453,
						"regions":
						{
						},
						"selection":
						[
							[
								67070,
								67459
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 7976.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/emorgan/Documents/Workspace/ix-one/hva_items.txt",
					"settings":
					{
						"buffer_size": 366782,
						"regions":
						{
						},
						"selection":
						[
							[
								3539,
								3539
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 79.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/Users/emorgan/Documents/Workspace/ix-one/token",
					"settings":
					{
						"buffer_size": 1910,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/Users/emorgan/Documents/Workspace/ix-one/token.php",
					"settings":
					{
						"buffer_size": 1918,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "ix_one.module",
					"settings":
					{
						"buffer_size": 2554,
						"regions":
						{
						},
						"selection":
						[
							[
								1051,
								1051
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 550.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "ix_one_form.inc",
					"settings":
					{
						"buffer_size": 12757,
						"regions":
						{
						},
						"selection":
						[
							[
								7120,
								7120
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 1782.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/Users/emorgan/Documents/Workspace/app/drupal/modules/block/block.api.php",
					"settings":
					{
						"buffer_size": 14763,
						"regions":
						{
						},
						"selection":
						[
							[
								9153,
								9153
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3022.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "/Users/emorgan/Documents/Workspace/app/drupal/includes/theme.inc",
					"settings":
					{
						"buffer_size": 113566,
						"regions":
						{
						},
						"selection":
						[
							[
								84724,
								84738
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 29451.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/Users/emorgan/Documents/Workspace/app/drupal/sites/all/modules/examples/form_example/form_example.module",
					"settings":
					{
						"buffer_size": 8150,
						"regions":
						{
						},
						"selection":
						[
							[
								7924,
								8104
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2618.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/Users/emorgan/Documents/Workspace/app/drupal/sites/all/modules/examples/form_example/form_example_states.inc",
					"settings":
					{
						"buffer_size": 9666,
						"regions":
						{
						},
						"selection":
						[
							[
								7299,
								7570
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2810.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/Users/emorgan/Documents/Workspace/app/drupal/sites/all/modules/examples/form_example/form_example_elements.inc",
					"settings":
					{
						"buffer_size": 19141,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1657.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/Users/emorgan/Documents/Workspace/app/drupal/sites/all/modules/examples/form_example/form_example_tutorial.inc",
					"settings":
					{
						"buffer_size": 27885,
						"regions":
						{
						},
						"selection":
						[
							[
								19084,
								19093
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9154.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"theme",
				"drupal/includes/theme.inc"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/Users/emorgan/Documents/Workspace/app/drupal/sites/all/modules/ix_one/ix-one.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 325.0,
	"status_bar_visible": true
}
